[2024-06-30 19:59:30,505][train.py][line:62][INFO] ---------------args---------------
Namespace(data_path='./data/Clean_Pymatgen_Wrapped/0/', train_name='ExploreV1', model_path=None, learning_rate=0.0007, min_learning_rate=1e-05, start_scheduler_step=50, weight_decay=1e-05, momentum=0.99, batch_size=256, class_num=230, epoch_num=200, model_save_path='./checkpoints/ExploreV1_2', device='2', scheduler_T=None, num_workers=20, log_name='log/train//train_ExploreV1_2024_06_30_19:59:28.log')
[2024-06-30 19:59:30,507][train.py][line:63][INFO] ---------------model---------------
ExplorerV1(
  (selective_block): BiMamba(
    (layers): ModuleList(
      (0-3): 4 x ResidualBlock(
        (mixer): MambaBlock(
          (in_proj): Linear(in_features=1, out_features=4, bias=False)
          (conv1d): Conv1d(2, 2, kernel_size=(4,), stride=(1,), padding=(3,), groups=2)
          (x_proj): Linear(in_features=2, out_features=33, bias=False)
          (dt_proj): Linear(in_features=1, out_features=2, bias=True)
          (out_proj): Linear(in_features=2, out_features=1, bias=False)
        )
        (norm): RMSNorm()
      )
    )
    (norm_f): RMSNorm()
  )
  (conv): ResTcn(
    (conv): ModuleList(
      (0): Sequential(
        (0): ResBlock1D(
          (pre): Conv1d(2, 16, kernel_size=(1,), stride=(1,), bias=False)
          (conv): Sequential(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (1): Sequential(
        (0): ResBlock1D(
          (pre): Identity()
          (conv): Sequential(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (2): Sequential(
        (0): ResBlock1D(
          (pre): Conv1d(16, 32, kernel_size=(1,), stride=(1,), bias=False)
          (conv): Sequential(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (3): Sequential(
        (0): ResBlock1D(
          (pre): Identity()
          (conv): Sequential(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (4): Sequential(
        (0): ResBlock1D(
          (pre): Conv1d(32, 64, kernel_size=(1,), stride=(1,), bias=False)
          (conv): Sequential(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (5): Sequential(
        (0): ResBlock1D(
          (pre): Identity()
          (conv): Sequential(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (6): Sequential(
        (0): ResBlock1D(
          (pre): Conv1d(64, 128, kernel_size=(1,), stride=(1,), bias=False)
          (conv): Sequential(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (7): Sequential(
        (0): ResBlock1D(
          (pre): Identity()
          (conv): Sequential(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (8): Sequential(
        (0): ResBlock1D(
          (pre): Conv1d(128, 256, kernel_size=(1,), stride=(1,), bias=False)
          (conv): Sequential(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (9): Sequential(
        (0): ResBlock1D(
          (pre): Identity()
          (conv): Sequential(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (10): Sequential(
        (0): ResBlock1D(
          (pre): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
          (conv): Sequential(
            (0): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (11): Sequential(
        (0): ResBlock1D(
          (pre): Identity()
          (conv): Sequential(
            (0): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
      (12): Sequential(
        (0): ResBlock1D(
          (pre): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
          (conv): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): LeakyReLU(negative_slope=0.01)
            (3): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
            (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01)
        )
        (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
      )
    )
  )
  (mlp): Sequential(
    (0): Linear(in_features=1024, out_features=512, bias=True)
    (1): Linear(in_features=512, out_features=230, bias=True)
  )
)
[2024-06-30 19:59:30,507][train.py][line:64][INFO] ---------------device---------------
cuda:2
[2024-06-30 19:59:30,507][train.py][line:65][INFO] ---------------optimizer---------------
AdamW (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    initial_lr: 0.0007
    lr: 0.0007
    maximize: False
    weight_decay: 1e-05
)
[2024-06-30 19:59:30,507][train.py][line:66][INFO] ---------------lossfn---------------
CrossEntropyLoss()
[2024-06-30 19:59:30,511][train.py][line:78][INFO] ---------------epoch 1---------------
lr: [0.0007]
[2024-06-30 20:02:08,633][train.py][line:95][INFO] [training]total_num: 142619.0,error: 3.493520325829394
[2024-06-30 20:04:19,117][train.py][line:132][INFO] [testing]total_number: 142619,error: 99.46007394874158,total_acc: 0.0024260443169623613
[2024-06-30 20:04:19,280][train.py][line:78][INFO] ---------------epoch 2---------------
lr: [0.0007]
[2024-06-30 20:06:54,958][train.py][line:95][INFO] [training]total_num: 142619.0,error: 4.036471449556368
[2024-06-30 20:09:04,836][train.py][line:132][INFO] [testing]total_number: 142619,error: 3.7832595901188624,total_acc: 0.06538399308919907
[2024-06-30 20:09:04,995][train.py][line:78][INFO] ---------------epoch 3---------------
lr: [0.0007]
[2024-06-30 20:11:42,121][train.py][line:95][INFO] [training]total_num: 142619.0,error: 3.7734919254082513
[2024-06-30 20:14:01,921][train.py][line:132][INFO] [testing]total_number: 142619,error: 3.773039269990136,total_acc: 0.06538399308919907
[2024-06-30 20:14:02,081][train.py][line:78][INFO] ---------------epoch 4---------------
lr: [0.0007]
[2024-06-30 20:16:44,999][train.py][line:95][INFO] [training]total_num: 142619.0,error: 3.7719191477720457
[2024-06-30 20:19:09,962][train.py][line:132][INFO] [testing]total_number: 142619,error: 3.772323539920947,total_acc: 0.06538399308919907
[2024-06-30 20:19:10,157][train.py][line:78][INFO] ---------------epoch 5---------------
lr: [0.0007]
[2024-06-30 20:21:56,092][train.py][line:95][INFO] [training]total_num: 142619.0,error: 3.772746387588581
[2024-06-30 20:24:21,766][train.py][line:132][INFO] [testing]total_number: 142619,error: 3.7686335059264495,total_acc: 0.06608516722917557
[2024-06-30 20:24:21,944][train.py][line:78][INFO] ---------------epoch 6---------------
lr: [0.0007]
[2024-06-30 20:27:08,871][train.py][line:95][INFO] [training]total_num: 142619.0,error: 3.770505870912622
[2024-06-30 20:29:33,998][train.py][line:132][INFO] [testing]total_number: 142619,error: 3.7696251647902455,total_acc: 0.06538399308919907
[2024-06-30 20:29:34,002][train.py][line:78][INFO] ---------------epoch 7---------------
lr: [0.0007]
