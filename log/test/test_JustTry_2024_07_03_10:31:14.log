[2024-07-03 10:31:22,904][test.py][line:34][INFO] ---------------args---------------
Namespace(data_path='../MOF/data/Pymatgen_Wrapped/3/', batch_size=128, model_path='checkpoints/ResTcn_5000_1/ResTcn_5000_epoch_193.pth', device='7', mode='test', top_k=5, parallel_model=False, test_name='JustTry', num_workers=20, log_name='log/test/test_JustTry_2024_07_03_10:31:14.log')
[2024-07-03 10:31:22,925][test.py][line:35][INFO] ---------------model---------------
ResTcn(
  (conv): Sequential(
    (0): ResBlock1D(
      (pre): Conv1d(2, 32, kernel_size=(1,), stride=(1,), bias=False)
      (conv): Sequential(
        (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (1): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
    (2): ResBlock1D(
      (pre): Identity()
      (conv): Sequential(
        (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (3): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
    (4): ResBlock1D(
      (pre): Conv1d(32, 64, kernel_size=(1,), stride=(1,), bias=False)
      (conv): Sequential(
        (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (5): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
    (6): ResBlock1D(
      (pre): Identity()
      (conv): Sequential(
        (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (7): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(1,))
    (8): ResBlock1D(
      (pre): Conv1d(64, 128, kernel_size=(1,), stride=(1,), bias=False)
      (conv): Sequential(
        (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (9): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(1,))
    (10): ResBlock1D(
      (pre): Identity()
      (conv): Sequential(
        (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (11): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(1,))
    (12): ResBlock1D(
      (pre): Conv1d(128, 256, kernel_size=(1,), stride=(1,), bias=False)
      (conv): Sequential(
        (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (13): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(1,))
    (14): ResBlock1D(
      (pre): Identity()
      (conv): Sequential(
        (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (15): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
    (16): ResBlock1D(
      (pre): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
      (conv): Sequential(
        (0): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (17): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
    (18): ResBlock1D(
      (pre): Identity()
      (conv): Sequential(
        (0): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (19): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
    (20): ResBlock1D(
      (pre): Conv1d(512, 1024, kernel_size=(1,), stride=(1,), bias=False)
      (conv): Sequential(
        (0): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (21): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(1,))
    (22): ResBlock1D(
      (pre): Identity()
      (conv): Sequential(
        (0): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (23): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(1,))
    (24): ResBlock1D(
      (pre): Identity()
      (conv): Sequential(
        (0): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.01)
        (3): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (relu): LeakyReLU(negative_slope=0.01)
    )
    (25): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
  )
  (mlp): Linear(in_features=1024, out_features=230, bias=True)
)
[2024-07-03 10:31:22,946][test.py][line:36][INFO] ---------------device---------------
cuda:7
[2024-07-03 10:31:22,946][test.py][line:37][INFO] ---------------lossfn---------------
CrossEntropyLoss()
